@mixin min($bp, $max: 'null', $device: 'screen') {
  @if $max== 'null' {
    @media only #{$device} and (min-width: #{$bp}) {
      @content;
    }
  } @else {
    @media only #{$device} and (min-width: #{$bp}) and (max-width: #{$max}) {
      @content;
    }
  }
}

$container-sizes: (
  xs: map-get($breakpoints, xs) - 20px,
  sm: map-get($breakpoints, sm) - 30px,
  md: map-get($breakpoints, md) - 40px,
  lg: map-get($breakpoints, lg) - 50px,
  xl: map-get($breakpoints, xl) - 400px
);

.text-center {
  text-align: center;
}

.relative {
  position: relative;
  min-height: 100vh;
}

.mx-auto {
  margin: 0 auto;
}

.container {
  padding-right: 1rem;
  padding-left: 1rem;

  &:not(.is-fluid) {
    margin: 0 auto;

    @each $bp, $container-size in $container-sizes {
      @include min(#{bp(#{$bp})}) {
        width: 100% !important;
        max-width: container(#{$bp});
      }
    }
  }

  &.is-fluid {
    padding-left: 40px;
    padding-right: 40px;
    padding-top: 20px;
  }
}
